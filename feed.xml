<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://mioke.github.io/</id><title>Klein Mioke</title><subtitle>A minimal, portfolio, sidebar, bootstrap Jekyll theme with responsive web design and focuses on text presentation.</subtitle> <updated>2024-03-08T18:35:32+08:00</updated> <author> <name>Klein</name> <uri>https://mioke.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://mioke.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="https://mioke.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator> <rights> © 2024 Klein </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>How to make Swift Macro available using CocoaPods</title><link href="https://mioke.github.io/posts/How-to-make-macro-available-from-CocoaPods/" rel="alternate" type="text/html" title="How to make Swift Macro available using CocoaPods" /><published>2024-03-06T21:00:00+08:00</published> <updated>2024-03-08T18:34:57+08:00</updated> <id>https://mioke.github.io/posts/How-to-make-macro-available-from-CocoaPods/</id> <content src="https://mioke.github.io/posts/How-to-make-macro-available-from-CocoaPods/" /> <author> <name>Klein</name> </author> <category term="Tech" /> <category term="Swift" /> <summary>Provide macros to other project's or development pods using CocoaPods instead of using SwiftPM.</summary> </entry> <entry><title>When we talk about politics</title><link href="https://mioke.github.io/posts/Talk-abould-the-politics/" rel="alternate" type="text/html" title="When we talk about politics" /><published>2021-12-29T20:51:00+08:00</published> <updated>2022-01-11T20:51:40+08:00</updated> <id>https://mioke.github.io/posts/Talk-abould-the-politics/</id> <content src="https://mioke.github.io/posts/Talk-abould-the-politics/" /> <author> <name>Klein</name> </author> <category term="View Points" /> <summary> 如今国内已经越来越难互相谈论社会、政见话题了，原因不乏就是政治教育缺乏，同时也没有讨论环境。本来有很多想说的，但是经历过一次次冲突之后明白了一个道理，要讨论这些，首先需要判断对方的思维体系是趋同的还是趋异的。人类文明进步到今天，一定趋同是文明进步的趋势。所以跟一个趋异的人去讨论问题，他一定会用一些你们根本上的差异点去反驳你，导致不可调和的矛盾。所以，一定要首先从缓和的话题去分析他是属于哪种人。 冲突多了，人就会变得不想发表意见，但希望以后我依然能直言个人感受，批判不合理的事情。另外，对于那些觉得批判都是不好的事情的人来说，真的需要认真思考下自己的观念是不是已经太原始了。 </summary> </entry> <entry><title>Why we struggled using native code to build apps</title><link href="https://mioke.github.io/posts/Why-we-struggled-using-navite-code-to-build-apps/" rel="alternate" type="text/html" title="Why we struggled using native code to build apps" /><published>2021-11-19T20:02:00+08:00</published> <updated>2022-01-11T17:32:01+08:00</updated> <id>https://mioke.github.io/posts/Why-we-struggled-using-navite-code-to-build-apps/</id> <content src="https://mioke.github.io/posts/Why-we-struggled-using-navite-code-to-build-apps/" /> <author> <name>Klein</name> </author> <category term="View Points" /> <summary> 以下想法为个人思考，没有讨论对错，没有想去从全局or任意角度为分析，仅为记录。 写这篇思考对的思源是，近两天看到朋友圈在发关于腾讯云搭建低代码平台的新闻。文中对低代码的优势总结几个字在于快速、simple、难度低（人人都是工程师😂）。我个人对平台级技术的发展没什么意见，但是我偶尔想到了最近刚在炒的概念 Metaverse (元宇宙)。我感到有点有趣🤔，因为不论以后 Metaverse 想怎么发展（虽然9成目前是来炒作的，但是）如果真的是实现技术，首要的标准是产品体验。更近一步来思考国内外技术的差异点，国内不管是小程序、云平台、低代码等等，他们的用户都是 toB 市场更多，B 市场再实现产品 toC。而国外的优秀产品公司，更注重的是实际对 C 端用户本身的用户体验。 这不禁引人思考一个问题，是用户造就了市场，还是市场培养了用户。 国内用户（大部分）向来以能忍著称，基本... </summary> </entry> <entry><title>The some in Swift</title><link href="https://mioke.github.io/posts/The-some-in-Swift/" rel="alternate" type="text/html" title="The some in Swift" /><published>2021-11-12T15:20:00+08:00</published> <updated>2021-11-22T14:46:52+08:00</updated> <id>https://mioke.github.io/posts/The-some-in-Swift/</id> <content src="https://mioke.github.io/posts/The-some-in-Swift/" /> <author> <name>Klein</name> </author> <category term="Tech" /> <category term="Swift" /> <summary> Swift 5 introduced the “Opaque Type” and see how wrong did I think about it. 我的思路遇到了什么问题 最先开始我以为 some 是一个类似于 ObjC 中 __kindof 的标识，意识到我的错误是在一段时间之后了。 说明这个过程和 some 的用法我们需要从我先入为主的乱用开始说起（开始废话了）。 我先定义个 Flyable 的协议，然后有 Bird Dragonfly 实现它。 protocol Flyable {} class Bird: Flyable {} class Dragonfly: Flyable {} 这时候我们有个方法可以随机返回一个可飞行生物： func getSomeFlyableCreatures() -&amp;gt; Flyable { let someRa... </summary> </entry> <entry><title>Compare between RxSwift and ReactiveSwift</title><link href="https://mioke.github.io/posts/Compare-between-RxSwift-and-ReactiveSwift/" rel="alternate" type="text/html" title="Compare between RxSwift and ReactiveSwift" /><published>2021-11-10T18:32:00+08:00</published> <updated>2021-11-19T12:28:22+08:00</updated> <id>https://mioke.github.io/posts/Compare-between-RxSwift-and-ReactiveSwift/</id> <content src="https://mioke.github.io/posts/Compare-between-RxSwift-and-ReactiveSwift/" /> <author> <name>Klein</name> </author> <category term="Tech" /> <category term="FRP" /> <summary>The different part between RxSwift and ReactiveSwift, and learn how to understand them.</summary> </entry> </feed>
